name: "TruffleHog Maximum Coverage Secret Scanning"

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    - cron: '0 2 * * 1'  # Weekly full scan on Monday at 2am UTC
  workflow_dispatch:
    inputs:
      scan_mode:
        description: 'Scan mode (incremental/full)'
        required: false
        default: 'incremental'
        type: choice
        options:
        - incremental
        - full

permissions:
  contents: read
  pull-requests: write
  security-events: write
  actions: read

jobs:
  trufflehog-max-coverage:
    runs-on: ubuntu-latest
    name: "TruffleHog Maximum Coverage Scan"
    continue-on-error: true  # Won't fail pipeline even if secrets are found
    
    steps:
    - name: "Checkout Repository"
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for comprehensive scanning
        
    - name: "Configure Scan Parameters"
      id: scan-config
      shell: bash
      run: |
        echo "Event: ${{ github.event_name }}"
        echo "Ref: ${{ github.ref }}"
        
        # Configure scan mode based on event type
        if [[ "${{ github.event_name }}" == "schedule" ]] || [[ "${{ github.event.inputs.scan_mode }}" == "full" ]]; then
          echo "scan_mode=full" >> $GITHUB_OUTPUT
          echo "extra_args=--json --results=verified,unknown,unverified,filtered_unverified --no-verification --archive-max-size=100MB --archive-max-depth=10 --archive-timeout=5m --concurrency=6 --include-detectors=all --exclude-paths=.trufflehog-exclude-paths.txt" >> $GITHUB_OUTPUT
        else
          echo "scan_mode=incremental" >> $GITHUB_OUTPUT
          echo "extra_args=--json --results=verified,unknown,unverified,filtered_unverified --no-verification --archive-max-size=100MB --archive-max-depth=10 --archive-timeout=5m --concurrency=6 --include-detectors=all --exclude-paths=.trufflehog-exclude-paths.txt --filter-entropy=2.0" >> $GITHUB_OUTPUT
        fi

    - name: "Run TruffleHog Maximum Coverage Scan"
      id: trufflehog-scan
      uses: trufflesecurity/trufflehog@main
      continue-on-error: true  # Prevents workflow failure on secret detection
      with:
        extra_args: ${{ steps.scan-config.outputs.extra_args }}

    - name: "Process Scan Results"
      id: process-results
      shell: bash
      run: |
        echo "TruffleHog scan completed with exit code: ${{ steps.trufflehog-scan.outcome }}"
        
        # Check if any secrets were found
        if [[ "${{ steps.trufflehog-scan.outcome }}" == "failure" ]]; then
          echo "⚠️ SECRETS DETECTED - Review required!"
          echo "secrets_found=true" >> $GITHUB_ENV
        else
          echo "✅ No secrets detected"
          echo "secrets_found=false" >> $GITHUB_ENV
        fi

    - name: "Generate Enhanced Summary"
      shell: bash
      run: |
        echo "## 🔍 TruffleHog Maximum Coverage Scan Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Scan Mode**: ${{ steps.scan-config.outputs.scan_mode }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch/PR**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Scan Result**: ${{ steps.trufflehog-scan.outcome }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Secrets Found**: ${{ env.secrets_found }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Configuration**: Maximum Coverage (All Results + No Verification)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [[ "${{ env.secrets_found }}" == "true" ]]; then
          echo "### ⚠️ Action Required" >> $GITHUB_STEP_SUMMARY
          echo "Potential secrets were detected using maximum coverage settings. Please review carefully:" >> $GITHUB_STEP_SUMMARY
          echo "1. **Verified secrets**: Immediately rotate these credentials" >> $GITHUB_STEP_SUMMARY
          echo "2. **Unknown secrets**: Investigate and verify manually" >> $GITHUB_STEP_SUMMARY
          echo "3. **Unverified secrets**: Review for false positives and real secrets" >> $GITHUB_STEP_SUMMARY
          echo "4. Update exclusion patterns for confirmed false positives" >> $GITHUB_STEP_SUMMARY
        else
          echo "### ✅ All Clear" >> $GITHUB_STEP_SUMMARY
          echo "No secrets detected in this maximum coverage scan." >> $GITHUB_STEP_SUMMARY
        fi

    - name: "Comment on PR with Detailed Results"
      if: github.event_name == 'pull_request' && env.secrets_found == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const comment = `## 🔍 TruffleHog Maximum Coverage Scan Results
          
          **Scan Summary:**
          - **Total Secrets Found**: Multiple categories detected
          - **Repository**: ${{ github.repository }}
          - **Branch**: ${{ github.head_ref }}
          - **Commit**: ${{ github.sha }}
          - **Scan Mode**: Maximum Coverage (All Results + No Verification)
          
          ### ⚠️ Action Required
          This scan detected potential secrets using maximum coverage settings. Please:
          
          1. 📋 Review the detailed workflow logs in the Actions tab
          2. 🔍 Verify each detected secret manually:
             - **Verified secrets**: Rotate immediately 
             - **Unknown secrets**: Investigate thoroughly
             - **Unverified secrets**: Check for false positives
          3. 🔄 Remove/rotate any real credentials
          4. ✅ Update exclusion patterns for false positives
          
          ### 📊 Coverage Settings Used:
          - **Results**: \`verified,unknown,unverified,filtered_unverified\`
          - **Verification**: Disabled for maximum sensitivity
          - **Detectors**: All 800+ detector types enabled
          - **Entropy Filter**: Reduced to 2.0 (incremental) or disabled (full)
          
          > **Note**: This scan prioritizes coverage over precision to catch all potential secrets.
          > Some results may be false positives - please review carefully.
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

    - name: "Upload Scan Artifacts"
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: trufflehog-max-coverage-results-${{ github.run_number }}
        path: |
          ${{ github.workspace }}
        retention-days: 30

    - name: "Workflow Completion Status"
      shell: bash
      run: |
        if [[ "${{ env.secrets_found }}" == "true" ]]; then
          echo "✅ Workflow completed successfully - Secrets detected for review"
          echo "📊 Maximum coverage scan found potential secrets"
          echo "🔍 Check workflow logs and PR comments for details"
        else
          echo "✅ Workflow completed successfully - No secrets detected"
          echo "🎉 Repository appears clean with maximum coverage scanning"
        fi
        
        # Always exit successfully to prevent pipeline failure
        exit 0